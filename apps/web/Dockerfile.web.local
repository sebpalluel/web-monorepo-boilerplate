# FROM node:lts-alpine AS dev

# WORKDIR /frontend

# # Install dependencies
# COPY package.json yarn.lock* ./
# RUN \
#   [ -f yarn.lock ] && yarn || \
#   (echo "Lockfile not found." && exit 1)

# EXPOSE ${PORT}

FROM node:alpine AS builder
RUN apk update
# Set working directory
WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune --scope=web --docker

# Add lockfile and package.json's of isolated subworkspace
FROM node:alpine AS installer
RUN apk update
WORKDIR /app
COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/yarn.lock ./yarn.lock
COPY --from=builder /app/out/full/ .
COPY .gitignore .gitignore
COPY ../turbo.json turbo.json

RUN yarn install
RUN yarn turbo run build --filter=web...
EXPOSE ${PORT}

# FROM node:alpine AS runner
# WORKDIR /app

# # Don't run production as root
# RUN addgroup --system --gid 1001 nodejs
# RUN adduser --system --uid 1001 nextjs
# USER nextjs

# COPY --from=installer /app/apps/web/app.config.js .
# COPY --from=installer /app/apps/web/package.json .

# # Automatically leverage output traces to reduce image size
# # https://nextjs.org/docs/advanced-features/output-file-tracing
# COPY --from=installer --chown=nextjs:nodejs /app/apps/web/.app/standalone ./
# COPY --from=installer --chown=nextjs:nodejs /app/apps/web/.app/static ./apps/web/.app/static

# CMD node apps/web/server.js
